
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Archivo_adjuntoScalarFieldEnum = {
  id: 'id',
  nombre_archivo: 'nombre_archivo',
  url: 'url',
  tipo: 'tipo',
  tamanio: 'tamanio',
  extension: 'extension',
  subido_por: 'subido_por',
  creado_en: 'creado_en'
};

exports.Prisma.Archivo_entidadScalarFieldEnum = {
  id: 'id',
  archivo_id: 'archivo_id',
  entidad_tipo: 'entidad_tipo',
  entidad_id: 'entidad_id',
  fecha_vinculo: 'fecha_vinculo'
};

exports.Prisma.CitaScalarFieldEnum = {
  id: 'id',
  cliente_id: 'cliente_id',
  optometrista_id: 'optometrista_id',
  sucursal_id: 'sucursal_id',
  fecha_hora: 'fecha_hora',
  estado: 'estado',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.Cuenta_contableScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  nombre: 'nombre',
  tipo: 'tipo',
  descripcion: 'descripcion',
  cuenta_padre_id: 'cuenta_padre_id',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  erp_codigo: 'erp_codigo',
  activo: 'activo',
  creado_en: 'creado_en'
};

exports.Prisma.CuponScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  descripcion: 'descripcion',
  monto_descuento: 'monto_descuento',
  vigencia_inicio: 'vigencia_inicio',
  vigencia_fin: 'vigencia_fin',
  limite_uso: 'limite_uso',
  usos_realizados: 'usos_realizados',
  activo: 'activo'
};

exports.Prisma.Db_migrationsScalarFieldEnum = {
  id: 'id',
  nombre_migracion: 'nombre_migracion',
  ejecutado_en: 'ejecutado_en',
  autor: 'autor'
};

exports.Prisma.Descanso_empleadoScalarFieldEnum = {
  id: 'id',
  empleado_id: 'empleado_id',
  sucursal_id: 'sucursal_id',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  motivo: 'motivo',
  estado: 'estado',
  adjunto_id: 'adjunto_id',
  revisado_por: 'revisado_por',
  comentario_admin: 'comentario_admin',
  creado_en: 'creado_en',
  revisado_en: 'revisado_en'
};

exports.Prisma.Detalle_pedidoScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario'
};

exports.Prisma.FacturaScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  cliente_id: 'cliente_id',
  fecha_emision: 'fecha_emision',
  estado: 'estado',
  archivo_xml_id: 'archivo_xml_id',
  archivo_pdf_id: 'archivo_pdf_id',
  moneda: 'moneda',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  erp_estado: 'erp_estado',
  erp_payload: 'erp_payload',
  movimiento_contable_id: 'movimiento_contable_id'
};

exports.Prisma.GastoScalarFieldEnum = {
  id: 'id',
  descripcion: 'descripcion',
  monto: 'monto',
  fecha_gasto: 'fecha_gasto',
  categoria: 'categoria',
  usuario_id: 'usuario_id',
  sucursal_id: 'sucursal_id',
  moneda: 'moneda',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  erp_payload: 'erp_payload',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.Historial_clinicoScalarFieldEnum = {
  id: 'id',
  cliente_id: 'cliente_id',
  optometrista_id: 'optometrista_id',
  cita_id: 'cita_id',
  fecha: 'fecha',
  descripcion: 'descripcion',
  receta_id: 'receta_id',
  version: 'version',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.Integracion_erpScalarFieldEnum = {
  id: 'id',
  entidad_tipo: 'entidad_tipo',
  entidad_id: 'entidad_id',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  fecha_sync: 'fecha_sync',
  estado: 'estado',
  request_payload: 'request_payload',
  response_payload: 'response_payload',
  error: 'error'
};

exports.Prisma.InventarioScalarFieldEnum = {
  id: 'id',
  sucursal_id: 'sucursal_id',
  producto_id: 'producto_id',
  stock: 'stock',
  stock_minimo: 'stock_minimo',
  actualizado_en: 'actualizado_en'
};

exports.Prisma.Log_accesoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  fecha_ingreso: 'fecha_ingreso',
  ip: 'ip',
  exito: 'exito',
  motivo: 'motivo'
};

exports.Prisma.Log_auditoriaScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  accion: 'accion',
  descripcion: 'descripcion',
  fecha: 'fecha',
  ip: 'ip',
  modulo: 'modulo'
};

exports.Prisma.Log_contableScalarFieldEnum = {
  id: 'id',
  movimiento_id: 'movimiento_id',
  usuario_id: 'usuario_id',
  accion: 'accion',
  descripcion: 'descripcion',
  fecha: 'fecha'
};

exports.Prisma.Log_envio_correoScalarFieldEnum = {
  id: 'id',
  fecha_envio: 'fecha_envio',
  tipo_correo: 'tipo_correo',
  correo_destino: 'correo_destino',
  usuario_destino: 'usuario_destino',
  entidad_tipo: 'entidad_tipo',
  entidad_id: 'entidad_id',
  estado_envio: 'estado_envio',
  mensaje_error: 'mensaje_error',
  enviado_por: 'enviado_por',
  origen_envio: 'origen_envio',
  intentos: 'intentos',
  creado_en: 'creado_en'
};

exports.Prisma.Movimiento_contableScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  tipo: 'tipo',
  monto: 'monto',
  cuenta_id: 'cuenta_id',
  sucursal_id: 'sucursal_id',
  usuario_id: 'usuario_id',
  referencia_externa: 'referencia_externa',
  descripcion: 'descripcion',
  entidad_tipo: 'entidad_tipo',
  entidad_id: 'entidad_id',
  exportado: 'exportado',
  exportado_en: 'exportado_en',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  erp_payload: 'erp_payload',
  reversa_de: 'reversa_de',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.Movimiento_contable_entidadScalarFieldEnum = {
  id: 'id',
  movimiento_contable_id: 'movimiento_contable_id',
  entidad_tipo: 'entidad_tipo',
  entidad_id: 'entidad_id'
};

exports.Prisma.Movimiento_inventarioScalarFieldEnum = {
  id: 'id',
  inventario_id: 'inventario_id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  cantidad: 'cantidad',
  motivo: 'motivo',
  fecha: 'fecha',
  reversa_de: 'reversa_de',
  anulado: 'anulado'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  monto: 'monto',
  fecha_pago: 'fecha_pago',
  metodo: 'metodo',
  referencia_externa: 'referencia_externa',
  usuario_id: 'usuario_id',
  moneda: 'moneda',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  erp_payload: 'erp_payload',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  cliente_id: 'cliente_id',
  sucursal_id: 'sucursal_id',
  estado: 'estado',
  total: 'total',
  metodo_pago: 'metodo_pago',
  estado_pago: 'estado_pago',
  moneda: 'moneda',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo',
  movimiento_contable_id: 'movimiento_contable_id'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precio: 'precio',
  categoria: 'categoria',
  imagen_url: 'imagen_url',
  modelo_3d_url: 'modelo_3d_url',
  activo: 'activo',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo'
};

exports.Prisma.RolScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.SucursalScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  direccion: 'direccion',
  latitud: 'latitud',
  longitud: 'longitud',
  telefono: 'telefono',
  email: 'email',
  estado: 'estado',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por'
};

exports.Prisma.Transferencia_stockScalarFieldEnum = {
  id: 'id',
  producto_id: 'producto_id',
  sucursal_origen: 'sucursal_origen',
  sucursal_destino: 'sucursal_destino',
  solicitado_por: 'solicitado_por',
  cantidad: 'cantidad',
  motivo: 'motivo',
  estado: 'estado',
  revisado_por: 'revisado_por',
  comentario_admin: 'comentario_admin',
  solicitado_en: 'solicitado_en',
  revisado_en: 'revisado_en'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre_completo: 'nombre_completo',
  email: 'email',
  password: 'password',
  telefono: 'telefono',
  dni: 'dni',
  foto_perfil: 'foto_perfil',
  direccion: 'direccion',
  latitud: 'latitud',
  longitud: 'longitud',
  google_uid: 'google_uid',
  facebook_uid: 'facebook_uid',
  activo: 'activo',
  creado_en: 'creado_en',
  actualizado_en: 'actualizado_en',
  anulado_en: 'anulado_en',
  anulado_por: 'anulado_por',
  erp_id: 'erp_id',
  erp_tipo: 'erp_tipo'
};

exports.Prisma.Usuario_rolScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  rol_id: 'rol_id',
  creado_en: 'creado_en'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  archivo_adjunto: 'archivo_adjunto',
  archivo_entidad: 'archivo_entidad',
  cita: 'cita',
  cuenta_contable: 'cuenta_contable',
  cupon: 'cupon',
  db_migrations: 'db_migrations',
  descanso_empleado: 'descanso_empleado',
  detalle_pedido: 'detalle_pedido',
  factura: 'factura',
  gasto: 'gasto',
  historial_clinico: 'historial_clinico',
  integracion_erp: 'integracion_erp',
  inventario: 'inventario',
  log_acceso: 'log_acceso',
  log_auditoria: 'log_auditoria',
  log_contable: 'log_contable',
  log_envio_correo: 'log_envio_correo',
  movimiento_contable: 'movimiento_contable',
  movimiento_contable_entidad: 'movimiento_contable_entidad',
  movimiento_inventario: 'movimiento_inventario',
  pago: 'pago',
  pedido: 'pedido',
  producto: 'producto',
  rol: 'rol',
  sucursal: 'sucursal',
  transferencia_stock: 'transferencia_stock',
  usuario: 'usuario',
  usuario_rol: 'usuario_rol'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
